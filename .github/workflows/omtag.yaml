name: Pushka on new Tag
on: 
  push:
    tags:
      - 'v*'

jobs:
  build-dockerhub:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get the version
        run: echo "VERSION=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_ENV

      - name: ${{ github.event.repository.name }}.ToLower(repository name must be lowercase)
        run: |
          REPONAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          ACTOR=$(echo "${{ github.actor }}" | tr '[:upper:]' '[:lower:]')
          echo REPONAME=$REPONAME >> $GITHUB_ENV
          echo ACTOR=$ACTOR >> $GITHUB_ENV
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/arm/v7, linux/amd64 
          push: true
          tags: | 
            ${{ env.ACTOR }}/${{ env.REPONAME }}:${{ env.VERSION }}
            ${{ env.ACTOR }}/${{ env.REPONAME }}:latest

      - name: Update Service
        uses: Jnqa/docker-updater@action
        with:
          DU_USERNAME: ${{ secrets.DU_USERNAME }}
          DU_PASSWORD: ${{ secrets.DU_PASSWORD }}
          DU_HOST: api.jnqa.fun
          VERSION: ${{ env.VERSION }}
          CONTAINER_PREFIX: lk-